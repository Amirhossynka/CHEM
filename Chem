#ifndef CHEM
#define CHEM

#include<unordered_map>

class Chem{
    public :
        const double AVOGADRO = 6.022e23;

    private :
        double elementMolarMass(std::string compund_name){
            std::unordered_map<std::string, double> table_map = {
            {"H", 1.008}, {"He", 4.003}, {"Li", 6.941}, {"Be", 9.012}, {"B", 10.81}, 
            {"C", 12.01}, {"N", 14.01}, {"O", 16.00}, {"F", 19.00}, {"Ne", 20.18}, 
            {"Na", 22.99}, {"Mg", 24.31}, {"Al", 26.98}, {"Si", 28.09}, {"P", 30.97}, 
            {"S", 32.07}, {"Cl", 35.45}, {"K", 39.10}, {"Ar", 39.95}, {"Ca", 40.08}, 
            {"Sc", 44.96}, {"Ti", 47.87}, {"V", 50.94}, {"Cr", 52.00}, {"Mn", 54.94}, 
            {"Fe", 55.85}, {"Co", 58.93}, {"Ni", 58.69}, {"Cu", 63.55}, {"Zn", 65.38}, 
            {"Ga", 69.72}, {"Ge", 72.63}, {"As", 74.92}, {"Se", 78.96}, {"Br", 79.90}, 
            {"Kr", 83.80}, {"Rb", 85.47}, {"Sr", 87.62}, {"Y", 88.91}, {"Zr", 91.22}, 
            {"Nb", 92.91}, {"Mo", 95.94}, {"Tc", 98.00}, {"Ru", 101.1}, {"Rh", 102.9}, 
            {"Pd", 106.4}, {"Ag", 107.9}, {"Cd", 112.4}, {"In", 114.8}, {"Sn", 118.7}, 
            {"Sb", 121.8}, {"I", 126.9}, {"Te", 127.6}, {"Xe", 131.3}, {"Cs", 132.9}, 
            {"Ba", 137.3}, {"La", 138.9}, {"Ce", 140.1}, {"Pr", 140.9}, {"Nd", 144.2}, 
            {"Pm", 145.0}, {"Sm", 150.4}, {"Eu", 152.0}, {"Gd", 157.3}, {"Tb", 158.9}, 
            {"Dy", 162.5}, {"Ho", 164.9}, {"Er", 167.3}, {"Tm", 168.9}, {"Yb", 173.0}, 
            {"Lu", 175.0}, {"Hf", 178.5}, {"Ta", 180.9}, {"W", 183.8}, {"Re", 186.2}, 
            {"Os", 190.2}, {"Ir", 192.2}, {"Pt", 195.1}, {"Au", 197.0}, {"Hg", 200.6}, 
            {"Tl", 204.4}, {"Pb", 207.2}, {"Bi", 208.9}, {"Th", 232.0}, {"Pa", 231.0}, 
            {"U", 238.0}, {"Np", 237.0}, {"Pu", 244.0}, {"Am", 243.0}
            };
            
            if(!table_map[compund_name]) return -1;

            return table_map[compund_name];
        }

    public :
        void compoundMolarMass(std::string compound,int i,long double &sum){
            if(compound[i] == '\0') return;//handles the base case 
            
            std::pair<std::string, unsigned short> molecule_pair;//uses a std::pair to store each molecule
        
            //accesses element name
            std::string temp_element;
            while(compound[i] > 64 && compound[i] < 91 || compound[i] > 96 && compound[i] < 123){//if is in ( a to Z )
                temp_element += compound[i];
                i++;//increments i when compound[i] is read.
            }
            if(temp_element[0] == '\0'){
                throw std::runtime_error(" WRONG INPUT. ");
            }
            molecule_pair.first = temp_element;
        
            //accesses number of atoms
            std::string temp_atoms;
            while(compound[i] > 47 && compound[i] < 58){//if is in ( 1 to 9 )
                temp_atoms += compound[i];
                i++;
            }
            if(temp_atoms[0] == '\0'){
                throw std::runtime_error(" USAGE : YOU SHOULD PROVIDE THE NUMBER OF ATOMS AFTER EACH ELEMENT. ");
            }
            molecule_pair.second = std::stoi(temp_atoms);
        
            double molar_mass = elementMolarMass(molecule_pair.first);//gets molar_mass of element
            if(molar_mass == -1){
                throw std::runtime_error("NO SUCH ELEMENT.");
            }
            
            //adds the contribution of molecule to total molar mass of compound
            sum += (molecule_pair.second * molar_mass);
        
            //recursively calls itself with new index for compound to read next molecule
            compoundMolarMass(compound, i, sum);
        }

};

#endif
